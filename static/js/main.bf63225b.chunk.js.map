{"version":3,"sources":["components/PlayPage.js","artwork/logo.png","artwork/game_over.png","components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["PlayPage","state","score","colors","color","hex","hexArr","randColor","randHex","timerKey","generateTable","i","colorTable","push","className","style","value","onClick","e","determineGame","target","id","console","log","s","setState","renderTable","props","onGameOver","rC","rH","c","h","r","Math","floor","random","k","shuffleArr","getTime","remainingTime","this","backgroundColor","trailColor","isPlaying","duration","arr","temporaryValue","randomIndex","currentIndex","length","Component","MainPage","status","playGame","gameOver","alt","src","logo","logo_gameover","App","openLink","key","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf63225b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport \"./style/PlayPage.css\";\r\n\r\nclass PlayPage extends Component {\r\n  state = {\r\n    score: 0,\r\n    colors: [\r\n      { color: \"Red\", hex: \"#ff0000\" },\r\n      { color: \"Orange\", hex: \"#ff7800\" },\r\n      { color: \"Yellow\", hex: \"#fff700\" },\r\n      { color: \"Green\", hex: \"#00ff00\" },\r\n      { color: \"Blue\", hex: \"#0000AB\" },\r\n      { color: \"Purple\", hex: \"#ae00ff\" },\r\n      { color: \"Pink\", hex: \"#ff00ff\" },\r\n      { color: \"Black\", hex: \"#000000\" },\r\n      { color: \"White\", hex: \"#ffffff\" },\r\n    ],\r\n    hexArr: [\r\n      \"#ff0000\",\r\n      \"#ff7800\",\r\n      \"#fff700\",\r\n      \"#00ff00\",\r\n      \"#0000AB\",\r\n      \"#ae00ff\",\r\n      \"#ff00ff\",\r\n      \"#000000\",\r\n      \"#ffffff\",\r\n    ],\r\n    randColor: \"Red\",\r\n    randHex: \"#ff0000\",\r\n    timerKey: 0,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.renderTable();\r\n  // }\r\n\r\n  componentWillMount() {\r\n    this.renderTable();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"play-container\">\r\n        <div\r\n          className=\"timer-container\"\r\n          style={{ backgroundColor: this.state.randHex }}>\r\n          <CountdownCircleTimer\r\n            key={this.state.timerKey}\r\n            trailColor={this.state.randHex}\r\n            isPlaying\r\n            duration={3}\r\n            colors={\"#d3d3d3\"}>\r\n            {this.getTime}\r\n          </CountdownCircleTimer>\r\n        </div>\r\n        <div className=\"score-container\">\r\n          <h3>Score: {this.state.score}</h3>\r\n        </div>\r\n        <div className=\"game-board\">\r\n          {/* <table>{this.generateTable()}</table> */}\r\n          {this.generateTable()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  shuffleArr(arr) {\r\n    var currentIndex = arr.length;\r\n    var temporaryValue;\r\n    var randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = arr[currentIndex];\r\n      arr[currentIndex] = arr[randomIndex];\r\n      arr[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  generateTable = () => {\r\n    var i;\r\n    var colorTable = [];\r\n\r\n    for (i = 0; i < 3; i++) {\r\n      colorTable.push(\r\n        <div className=\"button-row\">\r\n          <button\r\n            className=\"color-button\"\r\n            style={{ color: this.state.hexArr[i * 3] }}\r\n            value={this.state.colors[i * 3].color}\r\n            onClick={(e) => this.determineGame(e.target.value)}>\r\n            {this.state.colors[i * 3].color}\r\n          </button>\r\n          <button\r\n            className=\"color-button\"\r\n            style={{ color: this.state.hexArr[i * 3 + 1] }}\r\n            value={this.state.colors[i * 3 + 1].color}\r\n            onClick={(e) => this.determineGame(e.target.value)}>\r\n            {this.state.colors[i * 3 + 1].color}\r\n          </button>\r\n          <button\r\n            className=\"color-button\"\r\n            style={{ color: this.state.hexArr[i * 3 + 2] }}\r\n            value={this.state.colors[i * 3 + 2].color}\r\n            onClick={(e) => this.determineGame(e.target.value)}>\r\n            {this.state.colors[i * 3 + 2].color}\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <tbody>{colorTable}</tbody>;\r\n  };\r\n\r\n  determineGame = (id) => {\r\n    console.log(\"id: \", id);\r\n\r\n    var s = this.state.score;\r\n\r\n    if (id === this.state.randColor) {\r\n      s++;\r\n      this.setState({ score: s });\r\n      this.renderTable();\r\n    } else {\r\n      console.log(\"YOU LOSE\");\r\n      this.props.onGameOver(this.state.score);\r\n    }\r\n  };\r\n\r\n  renderTable = () => {\r\n    var rC = this.state.randColor;\r\n    var rH = this.state.randHex;\r\n    var c = this.state.colors;\r\n    var h = this.state.hexArr;\r\n    var r = Math.floor(Math.random() * 9);\r\n    var k = this.state.timerKey;\r\n    k++;\r\n\r\n    this.shuffleArr(c);\r\n    this.shuffleArr(h);\r\n\r\n    console.log(\"c: \", c);\r\n    console.log(\"h: \", h);\r\n    console.log(\"r: \", r);\r\n    rC = c[r].color;\r\n    rH = c[r].hex;\r\n\r\n    console.log(\"rC: \", rC);\r\n    console.log(\"rH: \", rH);\r\n\r\n    this.setState({\r\n      colors: c,\r\n      hexArr: h,\r\n      randColor: rC,\r\n      randHex: rH,\r\n      timerKey: k,\r\n    });\r\n    console.log(this.state);\r\n  };\r\n\r\n  getTime = ({ remainingTime }) => {\r\n    if (remainingTime === 0) {\r\n      console.log(\"TOO LATE\");\r\n      this.props.onGameOver(this.state.score);\r\n    }\r\n  };\r\n}\r\n\r\nexport default PlayPage;\r\n","export default __webpack_public_path__ + \"static/media/logo.eab4f40b.png\";","export default __webpack_public_path__ + \"static/media/game_over.aa78c664.png\";","import React, { Component } from \"react\";\r\nimport PlayPage from \"./PlayPage\";\r\nimport \"./style/MainPage.css\";\r\nimport logo from \"./../artwork/logo.png\";\r\nimport logo_gameover from \"./../artwork/game_over.png\";\r\n\r\nclass MainPage extends Component {\r\n  state = { status: \"MAIN\", score: 0 };\r\n\r\n  render() {\r\n    console.log(\"STATUS: \", this.state.status);\r\n    if (this.state.status === \"MAIN\") {\r\n      return (\r\n        <div className=\"main-container\">\r\n          <div>\r\n            <img className=\"main-logo\" alt=\"main-logo\" src={logo}></img>\r\n          </div>\r\n          <div>\r\n            <button className=\"play-button\" onClick={this.playGame}>\r\n              PLAY\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.status === \"PLAY\") {\r\n      return (\r\n        <div>\r\n          <PlayPage onGameOver={this.gameOver} />\r\n        </div>\r\n      );\r\n    } else if (this.state.status === \"GAMEOVER\") {\r\n      return (\r\n        <div className=\"main-container\">\r\n          <div>\r\n            <img\r\n              className=\"main-logo\"\r\n              alt=\"game-over-logo\"\r\n              src={logo_gameover}></img>\r\n          </div>\r\n          <h1>SCORE: {this.state.score}</h1>\r\n          <div>\r\n            <button className=\"play-button\" onClick={this.playGame}>\r\n              PLAY AGAIN\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  playGame = () => {\r\n    var s = \"PLAY\";\r\n    this.setState({ status: s });\r\n    console.log(\"STATUS: \", this.state.status);\r\n  };\r\n\r\n  gameOver = (r) => {\r\n    var s = \"GAMEOVER\";\r\n    this.setState({ status: s, score: r });\r\n    console.log(\"STATUS: \", this.state.status);\r\n  };\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\nimport MainPage from \"./components/MainPage\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"link-container\">\n          <button\n            onClick={() => window.open(\"http://janroces.com/\")}\n            className=\"link\">\n            janroces.com\n          </button>\n          <button\n            onClick={() => window.open(\"https://github.com/JanRoces\")}\n            className=\"link\">\n            github.com/JanRoces\n          </button>\n        </div>\n        <MainPage />\n      </div>\n    );\n  }\n\n  openLink = (key) => {\n    console.log(\"key: \", key);\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}